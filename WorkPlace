#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <hash_map>
using namespace std;

vector<string>w_nameList;//사업장 이름 중복되는 지 체크하기 위해 존재하는 전역변수
#define MAX_SIZE 100
char inputString[MAX_SIZE];//w_name.txt파일 읽을 때 한줄한줄 line받아주는 변수

int main()
{
	string w_name;//사업장 이름
	int w_hpay,w_date;//시급, 계약날짜
	bool w_night, w_weekend, w_tax,error_check=false;//야간수당여부, 주휴수당여부, 
	int N;//for문 인덱스(정보 입력받는 for문)
	string input_name[6] =
	{ "사업장이름","시급","계약날짜","야간수당여부","주휴수당여부","소득세" };
	//정보 입력할 때 어디 부분이 틀렸는지 알려주기 위해 만든 string형 배열.

	

	int count=0;//정보들 출력할때 한개 이상이면 '/'로 구분해야 하기 때문에
	//틀린 변수 개수 세주기 위해 선언.
	
	while(1){
		count = 0;//count변수 초기화
		input_name[0] = "사업장이름";//input_name 첫번째 원소는 조건에 따라 달라지므로, 초기화.
		//입력받기 시작.
		cout << "사업장 이름, 시급, 계약날짜, 야간수당여부, 주휴수당여부, 소득세를 입력하시오 ." << endl;
		cout << endl;
		cout << "(야간수당여부,주휴수당여부 : O -> 1, X -> 0 입력)" << endl;
		cout << endl;
		cout << "(소득세 : 8.5% -> 1, 3.3% -> 0 입력)" << endl;
		cout << endl;

		//스페이스로 구분해서 입력
		cin >> w_name >> w_hpay >> w_date >> w_night >> w_weekend >> w_tax;

		vector<string>::iterator iter;//사업장 이름 리스트에서 최근 입력한거랑 같으면, 중복된 이름이라고 출력
		iter = find(w_nameList.begin(), w_nameList.end(), w_name);

		for (N = 0; N < 6; N++)
		{
			switch (N)
			{
			case 0://사업장이름 조건 틀렸을 때
				if (iter == w_nameList.end() && w_name.length > 20) {//중복되는건 아니지만, 조건 틀렸을때

					cout << input_name[N];//사업장 이름이 틀렸다고 출력
					count++;//"/"여부를 위해 count++;
					
					error_check = true;//"가 틀렸습니다" 구문 출력해주기 위해 error_check=true로 바꿔줌.

				}
				else if (iter != w_nameList.end()) {//기존의 사업장이름들 중 하나랑 가장 최근에 입력받은 사업장이름이랑 중복됨.
					input_name[N] = "중복된 사업장이름";//사업장이름 대신 중복된 사업장이름에서 오류있다고 출력.
					cout << input_name[N];
					error_check = true;
					count++;
				}
				break;

			case 1:
				if (w_hpay < 0 || w_hpay>1000000) {//시급 조건 틀렸을때
					if (count > 0)//틀린 부분이 1개이상일때,"/"로 구분
						cout << "/" << input_name[N];

					else//오류가 이게 처음일때,
						cout << input_name[N];

					count++;
					error_check = true;
				}

				break;

			case 2://계약날짜 조건 틀렸을 때,
				if (w_date < 10000101 || w_date >21991231) {

					if (count > 0)
						cout << "/" << input_name[N];

					else
						cout << input_name[N];

					count++;
					error_check = true;
				}

				break;

			case 3://야간수당여부 입력조건 틀렸을때
				if (w_night != 0 && w_night != 1)
				{
					if (count > 0)
						cout << "/" << input_name[N];

					else
						cout << input_name[N];

					count++;
					error_check = true;
				}

				break;

			case 4://주휴수당여부 입력조건 틀렸을때
				if (w_weekend != 0 && w_weekend != 1)
				{
					if (count > 0)
						cout << "/" << input_name[N];

					else
						cout << input_name[N];

					count++;
					error_check = true;
				}
				break;

			case 5://소득세 종류 입력조건 틀렸을때
				if (w_tax != 0 && w_tax != 1)
				{
					if (count > 0)
						cout << "/" << input_name[N];

					else
						cout << input_name[N];

					count++;
					error_check = true;
				}
				break;


			}


		}


		if (error_check == true)//입력요소들 중, 조건에 맞지 않는게 한 개 이상일때,
		{
			cout << "에 오류가 있습니다." << endl;
			cout << endl;
			int check;

			cout << "1. 다시입력" << endl;
			cout << "2. 메인 메뉴로 돌아가기" << endl;

			cin >> check;//1,2중 입력

			while (check != 1 || check != 2)//예외 처리
			{
				cout << "1,2중 하나의 숫자를 입력하시오 : ";
			}
			
			if (check == 1)
				break;//while문 밖으로 나가지나??
			else if (check == 2)
				return;//메인 메뉴로 돌아감(WorkPlace()함수 강제종료)


		}

		else if (error_check == false)//입력요소들이 모두 조건을 만족했을때
		{
			int check;
			cout << "입력한 내용이 맞습니까?" << endl;
			cout << endl;

			cout << "1. 예" << endl;
			cout << "2. 아니오" << endl;



			cin >> check;//1,2중 하나만 입력

			while (check != 1 || check != 2)//예외처리
			{
				cout << "1,2중 하나의 숫자를 입력하시오 : ";
			}

			if (check == 1)
				goto clear;//while문 탈출.

			else if (check == 2)
				break;//다시 while문 loop 돈다.(?)

		}

	}

clear ://입력을 모두 조건에 맞게 입력하였다고 사용자가 최종 판단한 이후
	vector<string>::iterator iter;
	
	for (iter = w_nameList.begin(); iter <= w_nameList.end(); iter++)
		cout << *iter << endl;//지금까지의 사업장 이름 출력

	cout << w_name << endl;//최근 입력한 사업장 이름 출력.



	ofstream out("w_name.txt");//근무일지에 새로 입력한 정보들 입력

	if (w_night == 1 && w_weekend == 1 && w_tax == 1)
		out << "@" << w_name << "/" << w_hpay << "/" << w_date << "/" << "O" << "/" << "O" << "/" << 8.5 << "%" << endl;

	else if (w_night == 0 && w_weekend == 1 && w_tax ==	1 )
		out << "@" << w_name << "/" << w_hpay << "/" << w_date << "/" << "O" << "/" << "X" << "/" << 8.5 << "%" << endl;

	else if (w_night == 1 && w_weekend == 0 && w_tax == 1)
		out << "@" << w_name << "/" << w_hpay << "/" << w_date << "/" << "X" << "/" << "O" << "/" << 8.5 << "%" << endl;

	else if (w_night == 1 && w_weekend == 1 && w_tax == 0)
		out << "@" << w_name << "/" << w_hpay << "/" << w_date << "/" << "O" << "/" << "O" << "/" << 3.3 << "%" << endl;

	else if (w_night == 0 && w_weekend == 0 && w_tax == 1)
		out << "@" << w_name << "/" << w_hpay << "/" << w_date << "/" << "X" << "/" << "X" << "/" << 8.5 << "%" << endl;

	else if (w_night == 0 && w_weekend == 1 && w_tax == 0)
		out << "@" << w_name << "/" << w_hpay << "/" << w_date << "/" << "X" << "/" << "O" << "/" << 3.3 << "%" << endl;

	else if (w_night == 1 && w_weekend == 0 && w_tax == 0)
		out << "@" << w_name << "/" << w_hpay << "/" << w_date << "/" << "O" << "/" << "X" << "/" << 3.3 << "%" << endl;

	else if (w_night == 0 && w_weekend == 0 && w_tax == 0)
		out << "@" << w_name << "/" << w_hpay << "/" << w_date << "/" << "X" << "/" << "X" << "/" << 3.3 << "%" << endl;

	out.close();

	ifstream in("w_name.txt");//파일 출력(읽기)
	while (!in.eof())//파일에 있는 요소들이 없을때 까지 쭉 읽음.
	{
		in.getline(inputString, 100);
		cout << inputString << endl;

	}

	cout << endl;

	//콘솔창에 최근 입력정보 출력
	cout << "사업장 이름 : " << w_name << "/시급 : " << w_hpay << "/계약 날짜 : " << w_date << "/야간수당여부 : " << w_night << "/주휴수당여부 : " << w_weekend << "/소득세 여부 : " << w_tax << endl;
	cout << "(1 -> YES , 0 -> NO)" << endl;
	cout << "(소득세 0 -> 3.3% , 1 -> 8.5%)" << endl;
	cout << endl;

	system("PAUSE");//계속하려면 아무키나 누르세요가 자동 출력됨.
	
	return 0;
}
